import { Component } from '@angular/core';
import { fromEvent, of } from 'rxjs';
import { debounceTime, switchMap, tap } from 'rxjs/operators';
import { PoChartLineBaseComponent } from '../po-chart-line-base.component';
import * as i0 from "@angular/core";
import * as i1 from "../../../services/po-chart-maths.service";
import * as i2 from "@angular/common";
import * as i3 from "../po-chart-path/po-chart-path.component";
import * as i4 from "../po-chart-series-point/po-chart-series-point.component";
const _c0 = ["po-chart-area", ""];
function PoChartAreaComponent__svg_g_2_Template(rf, ctx) { if (rf & 1) {
    const _r5 = i0.ɵɵgetCurrentView();
    i0.ɵɵnamespaceSVG();
    i0.ɵɵelementStart(0, "g", 2);
    i0.ɵɵlistener("mouseenter", function PoChartAreaComponent__svg_g_2_Template__svg_g_mouseenter_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r5); const i_r3 = restoredCtx.index; const ctx_r4 = i0.ɵɵnextContext(); return ctx_r4.onEnter(i_r3); })("mouseleave", function PoChartAreaComponent__svg_g_2_Template__svg_g_mouseleave_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r5); const i_r3 = restoredCtx.index; const ctx_r6 = i0.ɵɵnextContext(); return ctx_r6.onLeave(i_r3); });
    i0.ɵɵelement(1, "g", 3);
    i0.ɵɵelementStart(2, "g", 4);
    i0.ɵɵlistener("p-point-click", function PoChartAreaComponent__svg_g_2_Template__svg_g_p_point_click_2_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r7 = i0.ɵɵnextContext(); return ctx_r7.onSeriePointClick($event); })("p-point-hover", function PoChartAreaComponent__svg_g_2_Template__svg_g_p_point_hover_2_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r8 = i0.ɵɵnextContext(); return ctx_r8.onSeriePointHover($event); });
    i0.ɵɵelementEnd()();
} if (rf & 2) {
    const item_r2 = ctx.$implicit;
    const i_r3 = ctx.index;
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵclassMap("po-chart-line-path-group-" + i_r3);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("p-chart-line", ctx_r1.chartType === "line")("p-animate", ctx_r1.animate)("p-color", item_r2.color)("p-coordinates", item_r2 == null ? null : item_r2.coordinates)("p-is-active", item_r2.isActive);
    i0.ɵɵattribute("key", "po-chart-line-path-" + i_r3);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("p-animate", ctx_r1.animate)("p-chart-line", ctx_r1.chartType === "line")("p-color", item_r2.color)("p-coordinates", ctx_r1.seriesPointsCoordinates[i_r3])("p-is-active", ctx_r1.activeTooltip)("p-relative-to", "po-chart-line-path-group-" + i_r3);
    i0.ɵɵattribute("key", "po-chart-line-path-points-group-" + i_r3);
} }
export class PoChartAreaComponent extends PoChartLineBaseComponent {
    constructor(mathsService, renderer, elementRef) {
        super(mathsService, renderer, elementRef);
        this.mathsService = mathsService;
        this.renderer = renderer;
        this.elementRef = elementRef;
    }
    onEnter(serieIndex) {
        this.applyActiveItem(this.seriesPathsCoordinates, serieIndex);
        this.initializeListener(serieIndex);
        this.activeTooltip = true;
    }
    onLeave(serieIndex) {
        this.removeListener();
        this.applyActiveItem(this.seriesPathsCoordinates);
        this.applyActiveItem(this.seriesPointsCoordinates[serieIndex], null);
    }
    onSeriePointHover(selectedItem) {
        const { relativeTo, ...item } = selectedItem;
        this.pointHover.emit(item);
    }
    applyActiveItem(list, index) {
        list.forEach((serie, seriesIndex) => {
            serie['isActive'] = index === undefined ? true : index === seriesIndex;
        });
    }
    getMouseCoordinates(event) {
        event.preventDefault();
        const { svgDomMatrix, svgPoint } = this.svgSpace;
        svgPoint.x = event.clientX;
        svgPoint.y = event.clientY;
        // Retorna as coordenadas do mouse em relação ao container svg.
        return svgPoint.matrixTransform(svgDomMatrix);
    }
    initializeListener(serieIndex) {
        let pointPosition;
        this.previousActiveSerieIndex = undefined;
        this.mouseMoveSubscription$ = fromEvent(this.elementRef.nativeElement, 'mousemove')
            .pipe(debounceTime(10), tap((event) => (pointPosition = this.getMouseCoordinates(event))), switchMap(() => of(this.verifyActiveArea(pointPosition))))
            .subscribe(activeObjIndex => {
            if (activeObjIndex !== undefined) {
                this.applyActiveItem(this.seriesPointsCoordinates[serieIndex], activeObjIndex);
            }
        });
    }
    removeListener() {
        this.mouseMoveSubscription$.unsubscribe();
    }
    verifyActiveArea(pointPosition) {
        const { x } = pointPosition;
        this.currentActiveSerieIndex = this.categoriesCoordinates.findIndex((category, index) => (x >= category && index === this.categoriesCoordinates.length - 1) ||
            (x >= category && x <= this.categoriesCoordinates[index + 1]));
        if (this.currentActiveSerieIndex >= 0 && this.currentActiveSerieIndex !== this.previousActiveSerieIndex) {
            this.previousActiveSerieIndex = this.currentActiveSerieIndex;
            return this.currentActiveSerieIndex;
        }
        return undefined;
    }
}
PoChartAreaComponent.ɵfac = function PoChartAreaComponent_Factory(t) { return new (t || PoChartAreaComponent)(i0.ɵɵdirectiveInject(i1.PoChartMathsService), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef)); };
PoChartAreaComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoChartAreaComponent, selectors: [["", "po-chart-area", ""]], features: [i0.ɵɵInheritDefinitionFeature], attrs: _c0, decls: 3, vars: 2, consts: [["chartLine", ""], [3, "class", "mouseenter", "mouseleave", 4, "ngFor", "ngForOf", "ngForTrackBy"], [3, "mouseenter", "mouseleave"], ["po-chart-path", "", 3, "p-chart-line", "p-animate", "p-color", "p-coordinates", "p-is-active"], ["po-chart-series-point", "", 3, "p-animate", "p-chart-line", "p-color", "p-coordinates", "p-is-active", "p-relative-to", "p-point-click", "p-point-hover"]], template: function PoChartAreaComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵnamespaceSVG();
        i0.ɵɵelementStart(0, "g", null, 0);
        i0.ɵɵtemplate(2, PoChartAreaComponent__svg_g_2_Template, 3, 15, "g", 1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngForOf", ctx.seriesPathsCoordinates)("ngForTrackBy", ctx.trackBy);
    } }, directives: [i2.NgForOf, i3.PoChartPathComponent, i4.PoChartSeriesPointComponent], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoChartAreaComponent, [{
        type: Component,
        args: [{ selector: '[po-chart-area]', template: "<svg:g #chartLine>\n\n  <svg:g *ngFor=\"let item of seriesPathsCoordinates; let i = index; trackBy: trackBy\"\n    [class]=\"'po-chart-line-path-group-' + i\"\n    (mouseenter)=\"onEnter(i)\"\n    (mouseleave)=\"onLeave(i)\"\n  >\n    <!-- SERIES PATHS -->\n    <svg:g po-chart-path\n      [p-chart-line]=\"chartType === 'line'\"\n      [attr.key]=\"'po-chart-line-path-' + i\"\n      [p-animate]=\"animate\"\n      [p-color]=\"item.color\" \n      [p-coordinates]=\"item?.coordinates\"\n      [p-is-active]=\"item.isActive\"\n      >\n      </svg:g>\n\n    <!-- SERIES POINTS -->\n    <svg:g po-chart-series-point\n      [p-animate]=\"animate\"\n      [p-chart-line]=\"chartType === 'line'\"\n      [p-color]=\"item.color\"\n      [p-coordinates]=\"seriesPointsCoordinates[i]\"\n      [p-is-active]=\"activeTooltip\"\n      [p-relative-to]=\"'po-chart-line-path-group-' + i\" \n      [attr.key]=\"'po-chart-line-path-points-group-' + i\"\n      (p-point-click)=\"onSeriePointClick($event)\"\n      (p-point-hover)=\"onSeriePointHover($event)\"\n      ></svg:g>\n  </svg:g>\n\n</svg:g>" }]
    }], function () { return [{ type: i1.PoChartMathsService }, { type: i0.Renderer2 }, { type: i0.ElementRef }]; }, null); })();
//# sourceMappingURL=data:application/json;base64,