import { Directive } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * @usedBy PoSelectComponent
 *
 * @deprecated 14.x.x
 *
 * @description
 *
 * > **Deprecated 14.x.x**. Utilize o `PoComboOptionTemplate` em conjunto com o componente `po-combo`.
 *
 * Esta diretiva permite personalizar o conteúdo dos itens exibidos na lista suspensa do componente.
 *
 * Quando utilizada em _mobile_ será exibido o componente nativo.
 *
 * Para personalizar o conteúdo de cada item da lista deve-se utilizar a diretiva `p-select-option-template` com `ng-template`
 * dentro da tag `po-select`.
 *
 * Para obter a referência do item atual, use `let-option`, com isso você terá acesso aos valores e poderá personalizar sua exibição.
 *
 * Esta diretiva compõe-se de dois meios para uso, de forma explícita tal como em *syntax sugar*. Veja a seguir ambos, respectivamente:
 *
 * ```
 * ...
 * <po-select
 *   name="select"
 *   [(ngModel)]="select"
 *   [p-options]="options">
 *     <ng-template p-select-option-template let-option>
 *       <option-template [option]="option"></option-template>
 *     </ng-template>
 * </po-select>
 * ...
 * ```
 *
 * ```
 * ...
 * <po-select
 *   name="select"
 *   [(ngModel)]="select"
 *   [p-options]="options">
 *     <div *p-select-option-template="let option">
 *       <option-template [option]="option"></option-template>
 *     </div>
 * </po-select>
 * ...
 *
 * ```
 */
export class PoSelectOptionTemplateDirective {
    // Necessário manter templateRef para o funcionamento do row template.
    constructor(templateRef) {
        this.templateRef = templateRef;
    }
}
PoSelectOptionTemplateDirective.ɵfac = function PoSelectOptionTemplateDirective_Factory(t) { return new (t || PoSelectOptionTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef)); };
PoSelectOptionTemplateDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: PoSelectOptionTemplateDirective, selectors: [["", "p-select-option-template", ""]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoSelectOptionTemplateDirective, [{
        type: Directive,
        args: [{
                selector: '[p-select-option-template]'
            }]
    }], function () { return [{ type: i0.TemplateRef }]; }, null); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tc2VsZWN0LW9wdGlvbi10ZW1wbGF0ZS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy91aS9zcmMvbGliL2NvbXBvbmVudHMvcG8tZmllbGQvcG8tc2VsZWN0L3BvLXNlbGVjdC1vcHRpb24tdGVtcGxhdGUvcG8tc2VsZWN0LW9wdGlvbi10ZW1wbGF0ZS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBZSxNQUFNLGVBQWUsQ0FBQzs7QUFFdkQ7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0E4Q0c7QUFJSCxNQUFNLE9BQU8sK0JBQStCO0lBQzFDLHNFQUFzRTtJQUN0RSxZQUFtQixXQUE2QjtRQUE3QixnQkFBVyxHQUFYLFdBQVcsQ0FBa0I7SUFBRyxDQUFDOzs4R0FGekMsK0JBQStCO2tGQUEvQiwrQkFBK0I7dUZBQS9CLCtCQUErQjtjQUgzQyxTQUFTO2VBQUM7Z0JBQ1QsUUFBUSxFQUFFLDRCQUE0QjthQUN2QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuLyoqXG4gKiBAdXNlZEJ5IFBvU2VsZWN0Q29tcG9uZW50XG4gKlxuICogQGRlcHJlY2F0ZWQgMTQueC54XG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogPiAqKkRlcHJlY2F0ZWQgMTQueC54KiouIFV0aWxpemUgbyBgUG9Db21ib09wdGlvblRlbXBsYXRlYCBlbSBjb25qdW50byBjb20gbyBjb21wb25lbnRlIGBwby1jb21ib2AuXG4gKlxuICogRXN0YSBkaXJldGl2YSBwZXJtaXRlIHBlcnNvbmFsaXphciBvIGNvbnRlw7pkbyBkb3MgaXRlbnMgZXhpYmlkb3MgbmEgbGlzdGEgc3VzcGVuc2EgZG8gY29tcG9uZW50ZS5cbiAqXG4gKiBRdWFuZG8gdXRpbGl6YWRhIGVtIF9tb2JpbGVfIHNlcsOhIGV4aWJpZG8gbyBjb21wb25lbnRlIG5hdGl2by5cbiAqXG4gKiBQYXJhIHBlcnNvbmFsaXphciBvIGNvbnRlw7pkbyBkZSBjYWRhIGl0ZW0gZGEgbGlzdGEgZGV2ZS1zZSB1dGlsaXphciBhIGRpcmV0aXZhIGBwLXNlbGVjdC1vcHRpb24tdGVtcGxhdGVgIGNvbSBgbmctdGVtcGxhdGVgXG4gKiBkZW50cm8gZGEgdGFnIGBwby1zZWxlY3RgLlxuICpcbiAqIFBhcmEgb2J0ZXIgYSByZWZlcsOqbmNpYSBkbyBpdGVtIGF0dWFsLCB1c2UgYGxldC1vcHRpb25gLCBjb20gaXNzbyB2b2PDqiB0ZXLDoSBhY2Vzc28gYW9zIHZhbG9yZXMgZSBwb2RlcsOhIHBlcnNvbmFsaXphciBzdWEgZXhpYmnDp8Ojby5cbiAqXG4gKiBFc3RhIGRpcmV0aXZhIGNvbXDDtWUtc2UgZGUgZG9pcyBtZWlvcyBwYXJhIHVzbywgZGUgZm9ybWEgZXhwbMOtY2l0YSB0YWwgY29tbyBlbSAqc3ludGF4IHN1Z2FyKi4gVmVqYSBhIHNlZ3VpciBhbWJvcywgcmVzcGVjdGl2YW1lbnRlOlxuICpcbiAqIGBgYFxuICogLi4uXG4gKiA8cG8tc2VsZWN0XG4gKiAgIG5hbWU9XCJzZWxlY3RcIlxuICogICBbKG5nTW9kZWwpXT1cInNlbGVjdFwiXG4gKiAgIFtwLW9wdGlvbnNdPVwib3B0aW9uc1wiPlxuICogICAgIDxuZy10ZW1wbGF0ZSBwLXNlbGVjdC1vcHRpb24tdGVtcGxhdGUgbGV0LW9wdGlvbj5cbiAqICAgICAgIDxvcHRpb24tdGVtcGxhdGUgW29wdGlvbl09XCJvcHRpb25cIj48L29wdGlvbi10ZW1wbGF0ZT5cbiAqICAgICA8L25nLXRlbXBsYXRlPlxuICogPC9wby1zZWxlY3Q+XG4gKiAuLi5cbiAqIGBgYFxuICpcbiAqIGBgYFxuICogLi4uXG4gKiA8cG8tc2VsZWN0XG4gKiAgIG5hbWU9XCJzZWxlY3RcIlxuICogICBbKG5nTW9kZWwpXT1cInNlbGVjdFwiXG4gKiAgIFtwLW9wdGlvbnNdPVwib3B0aW9uc1wiPlxuICogICAgIDxkaXYgKnAtc2VsZWN0LW9wdGlvbi10ZW1wbGF0ZT1cImxldCBvcHRpb25cIj5cbiAqICAgICAgIDxvcHRpb24tdGVtcGxhdGUgW29wdGlvbl09XCJvcHRpb25cIj48L29wdGlvbi10ZW1wbGF0ZT5cbiAqICAgICA8L2Rpdj5cbiAqIDwvcG8tc2VsZWN0PlxuICogLi4uXG4gKlxuICogYGBgXG4gKi9cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1twLXNlbGVjdC1vcHRpb24tdGVtcGxhdGVdJ1xufSlcbmV4cG9ydCBjbGFzcyBQb1NlbGVjdE9wdGlvblRlbXBsYXRlRGlyZWN0aXZlIHtcbiAgLy8gTmVjZXNzw6FyaW8gbWFudGVyIHRlbXBsYXRlUmVmIHBhcmEgbyBmdW5jaW9uYW1lbnRvIGRvIHJvdyB0ZW1wbGF0ZS5cbiAgY29uc3RydWN0b3IocHVibGljIHRlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjxhbnk+KSB7fVxufVxuIl19