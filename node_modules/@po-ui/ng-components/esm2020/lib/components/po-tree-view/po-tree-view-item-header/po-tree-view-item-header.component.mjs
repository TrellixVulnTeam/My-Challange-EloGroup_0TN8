import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../../po-field/po-checkbox/po-checkbox.component";
import * as i3 from "@angular/forms";
const _c0 = ["inputCheckbox"];
function PoTreeViewItemHeaderComponent_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r7 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 5);
    i0.ɵɵlistener("click", function PoTreeViewItemHeaderComponent_button_1_Template_button_click_0_listener($event) { i0.ɵɵrestoreView(_r7); const ctx_r6 = i0.ɵɵnextContext(); return ctx_r6.expanded.emit($event); });
    i0.ɵɵelement(1, "span", 6);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵclassProp("po-tree-view-item-header-button-icon-transform", ctx_r0.item.expanded);
} }
function PoTreeViewItemHeaderComponent_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainer(0);
} }
function PoTreeViewItemHeaderComponent_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span", 7);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = i0.ɵɵnextContext();
    i0.ɵɵclassProp("po-tree-view-item-header-padding", !ctx_r3.hasSubItems);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1(" ", ctx_r3.item.label, " ");
} }
function PoTreeViewItemHeaderComponent_ng_template_5_Template(rf, ctx) { if (rf & 1) {
    const _r9 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "po-checkbox", 8);
    i0.ɵɵlistener("ngModelChange", function PoTreeViewItemHeaderComponent_ng_template_5_Template_po_checkbox_ngModelChange_0_listener($event) { i0.ɵɵrestoreView(_r9); const ctx_r8 = i0.ɵɵnextContext(); return ctx_r8.item.selected = $event; })("p-change", function PoTreeViewItemHeaderComponent_ng_template_5_Template_po_checkbox_p_change_0_listener() { i0.ɵɵrestoreView(_r9); const ctx_r10 = i0.ɵɵnextContext(); return ctx_r10.selected.emit(ctx_r10.item); });
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = i0.ɵɵnextContext();
    i0.ɵɵclassProp("po-tree-view-item-header-padding", !ctx_r5.hasSubItems);
    i0.ɵɵproperty("p-label", ctx_r5.item.label)("ngModel", ctx_r5.item.selected);
} }
export class PoTreeViewItemHeaderComponent {
    constructor() {
        this.selectable = false;
        this.expanded = new EventEmitter();
        this.selected = new EventEmitter();
    }
    get hasSubItems() {
        return !!(this.item.subItems && this.item.subItems.length);
    }
}
PoTreeViewItemHeaderComponent.ɵfac = function PoTreeViewItemHeaderComponent_Factory(t) { return new (t || PoTreeViewItemHeaderComponent)(); };
PoTreeViewItemHeaderComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoTreeViewItemHeaderComponent, selectors: [["po-tree-view-item-header"]], viewQuery: function PoTreeViewItemHeaderComponent_Query(rf, ctx) { if (rf & 1) {
        i0.ɵɵviewQuery(_c0, 5);
    } if (rf & 2) {
        let _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputCheckbox = _t.first);
    } }, inputs: { item: ["p-item", "item"], selectable: ["p-selectable", "selectable"] }, outputs: { expanded: "p-expanded", selected: "p-selected" }, decls: 7, vars: 4, consts: [[1, "po-tree-view-item-header"], ["class", "po-tree-view-item-header-button", 3, "click", 4, "ngIf"], [4, "ngIf", "ngIfThen", "ngIfElse"], ["labelTemplate", ""], ["checkboxTemplate", ""], [1, "po-tree-view-item-header-button", 3, "click"], [1, "po-icon", "po-icon-arrow-down", "po-tree-view-item-header-button-icon"], [1, "po-tree-view-item-header-label"], [1, "po-tree-view-item-header-checkbox", 3, "p-label", "ngModel", "ngModelChange", "p-change"]], template: function PoTreeViewItemHeaderComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 0);
        i0.ɵɵtemplate(1, PoTreeViewItemHeaderComponent_button_1_Template, 2, 2, "button", 1);
        i0.ɵɵtemplate(2, PoTreeViewItemHeaderComponent_ng_container_2_Template, 1, 0, "ng-container", 2);
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(3, PoTreeViewItemHeaderComponent_ng_template_3_Template, 2, 3, "ng-template", null, 3, i0.ɵɵtemplateRefExtractor);
        i0.ɵɵtemplate(5, PoTreeViewItemHeaderComponent_ng_template_5_Template, 1, 4, "ng-template", null, 4, i0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        const _r2 = i0.ɵɵreference(4);
        const _r4 = i0.ɵɵreference(6);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx.hasSubItems);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx.selectable)("ngIfThen", _r4)("ngIfElse", _r2);
    } }, directives: [i1.NgIf, i2.PoCheckboxComponent, i3.NgControlStatus, i3.NgModel], encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoTreeViewItemHeaderComponent, [{
        type: Component,
        args: [{ selector: 'po-tree-view-item-header', changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"po-tree-view-item-header\">\n  <button *ngIf=\"hasSubItems\" class=\"po-tree-view-item-header-button\" (click)=\"expanded.emit($event)\">\n    <span\n      class=\"po-icon po-icon-arrow-down po-tree-view-item-header-button-icon\"\n      [class.po-tree-view-item-header-button-icon-transform]=\"item.expanded\"\n    >\n    </span>\n  </button>\n\n  <ng-container *ngIf=\"selectable; then checkboxTemplate; else labelTemplate\"></ng-container>\n</div>\n\n<ng-template #labelTemplate>\n  <span class=\"po-tree-view-item-header-label\" [class.po-tree-view-item-header-padding]=\"!hasSubItems\">\n    {{ item.label }}\n  </span>\n</ng-template>\n\n<ng-template #checkboxTemplate>\n  <po-checkbox\n    class=\"po-tree-view-item-header-checkbox\"\n    [class.po-tree-view-item-header-padding]=\"!hasSubItems\"\n    [p-label]=\"item.label\"\n    [(ngModel)]=\"item.selected\"\n    (p-change)=\"selected.emit(item)\"\n  >\n  </po-checkbox>\n</ng-template>\n" }]
    }], null, { inputCheckbox: [{
            type: ViewChild,
            args: ['inputCheckbox']
        }], item: [{
            type: Input,
            args: ['p-item']
        }], selectable: [{
            type: Input,
            args: ['p-selectable']
        }], expanded: [{
            type: Output,
            args: ['p-expanded']
        }], selected: [{
            type: Output,
            args: ['p-selected']
        }] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdHJlZS12aWV3LWl0ZW0taGVhZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpL3NyYy9saWIvY29tcG9uZW50cy9wby10cmVlLXZpZXcvcG8tdHJlZS12aWV3LWl0ZW0taGVhZGVyL3BvLXRyZWUtdmlldy1pdGVtLWhlYWRlci5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy91aS9zcmMvbGliL2NvbXBvbmVudHMvcG8tdHJlZS12aWV3L3BvLXRyZWUtdmlldy1pdGVtLWhlYWRlci9wby10cmVlLXZpZXctaXRlbS1oZWFkZXIuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7Ozs7O0lDQ3pHLGlDQUFvRztJQUFoQyxtTEFBUyw0QkFBcUIsSUFBQztJQUNqRywwQkFJTztJQUNULGlCQUFTOzs7SUFITCxlQUFzRTtJQUF0RSxzRkFBc0U7OztJQUsxRSx3QkFBMkY7OztJQUkzRiwrQkFBcUc7SUFDbkcsWUFDRjtJQUFBLGlCQUFPOzs7SUFGc0MsdUVBQXVEO0lBQ2xHLGVBQ0Y7SUFERSxrREFDRjs7OztJQUlBLHNDQU1DO0lBRkMsOE9BQTJCLGlMQUNmLG1DQUFtQixJQURKO0lBRzdCLGlCQUFjOzs7SUFMWix1RUFBdUQ7SUFDdkQsMkNBQXNCLGlDQUFBOztBRGIxQixNQUFNLE9BQU8sNkJBQTZCO0lBTDFDO1FBVXlCLGVBQVUsR0FBWSxLQUFLLENBQUM7UUFFN0IsYUFBUSxHQUFHLElBQUksWUFBWSxFQUFjLENBQUM7UUFFMUMsYUFBUSxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7S0FLMUQ7SUFIQyxJQUFJLFdBQVc7UUFDYixPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzdELENBQUM7OzBHQWJVLDZCQUE2QjtnRkFBN0IsNkJBQTZCOzs7Ozs7UUNUMUMsOEJBQXNDO1FBQ3BDLG9GQU1TO1FBRVQsZ0dBQTJGO1FBQzdGLGlCQUFNO1FBRU4sK0hBSWM7UUFFZCwrSEFTYzs7OztRQTFCSCxlQUFpQjtRQUFqQixzQ0FBaUI7UUFRWCxlQUFrQjtRQUFsQixxQ0FBa0IsaUJBQUEsaUJBQUE7O3VGREF0Qiw2QkFBNkI7Y0FMekMsU0FBUzsyQkFDRSwwQkFBMEIsbUJBRW5CLHVCQUF1QixDQUFDLE1BQU07Z0JBR25CLGFBQWE7a0JBQXhDLFNBQVM7bUJBQUMsZUFBZTtZQUVULElBQUk7a0JBQXBCLEtBQUs7bUJBQUMsUUFBUTtZQUVRLFVBQVU7a0JBQWhDLEtBQUs7bUJBQUMsY0FBYztZQUVDLFFBQVE7a0JBQTdCLE1BQU07bUJBQUMsWUFBWTtZQUVFLFFBQVE7a0JBQTdCLE1BQU07bUJBQUMsWUFBWSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFBvVHJlZVZpZXdJdGVtIH0gZnJvbSAnLi4vcG8tdHJlZS12aWV3LWl0ZW0vcG8tdHJlZS12aWV3LWl0ZW0uaW50ZXJmYWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tdHJlZS12aWV3LWl0ZW0taGVhZGVyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BvLXRyZWUtdmlldy1pdGVtLWhlYWRlci5jb21wb25lbnQuaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIFBvVHJlZVZpZXdJdGVtSGVhZGVyQ29tcG9uZW50IHtcbiAgQFZpZXdDaGlsZCgnaW5wdXRDaGVja2JveCcpIGlucHV0Q2hlY2tib3g7XG5cbiAgQElucHV0KCdwLWl0ZW0nKSBpdGVtOiBQb1RyZWVWaWV3SXRlbTtcblxuICBASW5wdXQoJ3Atc2VsZWN0YWJsZScpIHNlbGVjdGFibGU6IGJvb2xlYW4gPSBmYWxzZTtcblxuICBAT3V0cHV0KCdwLWV4cGFuZGVkJykgZXhwYW5kZWQgPSBuZXcgRXZlbnRFbWl0dGVyPE1vdXNlRXZlbnQ+KCk7XG5cbiAgQE91dHB1dCgncC1zZWxlY3RlZCcpIHNlbGVjdGVkID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgZ2V0IGhhc1N1Ykl0ZW1zKCkge1xuICAgIHJldHVybiAhISh0aGlzLml0ZW0uc3ViSXRlbXMgJiYgdGhpcy5pdGVtLnN1Ykl0ZW1zLmxlbmd0aCk7XG4gIH1cbn1cbiIsIjxkaXYgY2xhc3M9XCJwby10cmVlLXZpZXctaXRlbS1oZWFkZXJcIj5cbiAgPGJ1dHRvbiAqbmdJZj1cImhhc1N1Ykl0ZW1zXCIgY2xhc3M9XCJwby10cmVlLXZpZXctaXRlbS1oZWFkZXItYnV0dG9uXCIgKGNsaWNrKT1cImV4cGFuZGVkLmVtaXQoJGV2ZW50KVwiPlxuICAgIDxzcGFuXG4gICAgICBjbGFzcz1cInBvLWljb24gcG8taWNvbi1hcnJvdy1kb3duIHBvLXRyZWUtdmlldy1pdGVtLWhlYWRlci1idXR0b24taWNvblwiXG4gICAgICBbY2xhc3MucG8tdHJlZS12aWV3LWl0ZW0taGVhZGVyLWJ1dHRvbi1pY29uLXRyYW5zZm9ybV09XCJpdGVtLmV4cGFuZGVkXCJcbiAgICA+XG4gICAgPC9zcGFuPlxuICA8L2J1dHRvbj5cblxuICA8bmctY29udGFpbmVyICpuZ0lmPVwic2VsZWN0YWJsZTsgdGhlbiBjaGVja2JveFRlbXBsYXRlOyBlbHNlIGxhYmVsVGVtcGxhdGVcIj48L25nLWNvbnRhaW5lcj5cbjwvZGl2PlxuXG48bmctdGVtcGxhdGUgI2xhYmVsVGVtcGxhdGU+XG4gIDxzcGFuIGNsYXNzPVwicG8tdHJlZS12aWV3LWl0ZW0taGVhZGVyLWxhYmVsXCIgW2NsYXNzLnBvLXRyZWUtdmlldy1pdGVtLWhlYWRlci1wYWRkaW5nXT1cIiFoYXNTdWJJdGVtc1wiPlxuICAgIHt7IGl0ZW0ubGFiZWwgfX1cbiAgPC9zcGFuPlxuPC9uZy10ZW1wbGF0ZT5cblxuPG5nLXRlbXBsYXRlICNjaGVja2JveFRlbXBsYXRlPlxuICA8cG8tY2hlY2tib3hcbiAgICBjbGFzcz1cInBvLXRyZWUtdmlldy1pdGVtLWhlYWRlci1jaGVja2JveFwiXG4gICAgW2NsYXNzLnBvLXRyZWUtdmlldy1pdGVtLWhlYWRlci1wYWRkaW5nXT1cIiFoYXNTdWJJdGVtc1wiXG4gICAgW3AtbGFiZWxdPVwiaXRlbS5sYWJlbFwiXG4gICAgWyhuZ01vZGVsKV09XCJpdGVtLnNlbGVjdGVkXCJcbiAgICAocC1jaGFuZ2UpPVwic2VsZWN0ZWQuZW1pdChpdGVtKVwiXG4gID5cbiAgPC9wby1jaGVja2JveD5cbjwvbmctdGVtcGxhdGU+XG4iXX0=