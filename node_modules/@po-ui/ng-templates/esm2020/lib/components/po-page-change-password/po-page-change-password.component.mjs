import { Component, ViewChild, ViewContainerRef } from '@angular/core';
import { NgForm } from '@angular/forms';
import { PoModalComponent, poLocaleDefault } from '@po-ui/ng-components';
import { isExternalLink, isTypeof } from '../../utils/util';
import { PoModalPasswordRecoveryComponent } from '../po-modal-password-recovery/po-modal-password-recovery.component';
import { PoModalPasswordRecoveryType } from '../po-modal-password-recovery/enums/po-modal-password-recovery-type.enum';
import { PoPageChangePasswordBaseComponent } from './po-page-change-password-base.component';
import { poPageChangePasswordLiterals } from './literals/i18n/po-page-change-password-literals';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "./po-page-change-password.service";
import * as i3 from "@po-ui/ng-components";
import * as i4 from "../po-page-background/po-page-background.component";
import * as i5 from "@angular/forms";
import * as i6 from "@angular/common";
const _c0 = ["pageChangePassword"];
const _c1 = ["passwordForm"];
function PoPageChangePasswordComponent_div_13_Template(rf, ctx) { if (rf & 1) {
    const _r7 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div")(1, "po-password", 30);
    i0.ɵɵlistener("ngModelChange", function PoPageChangePasswordComponent_div_13_Template_po_password_ngModelChange_1_listener($event) { i0.ɵɵrestoreView(_r7); const ctx_r6 = i0.ɵɵnextContext(); return ctx_r6.currentPassword = $event; });
    i0.ɵɵelementEnd()();
} if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngModel", ctx_r2.currentPassword)("p-label", ctx_r2.literals.currentPassword);
} }
function PoPageChangePasswordComponent_div_14_a_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "a", 35);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r8 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("routerLink", ctx_r8.recovery);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1(" ", ctx_r8.literals.forgotPassword, " ");
} }
function PoPageChangePasswordComponent_div_14_a_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "a", 36);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r9 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("href", ctx_r9.recovery, i0.ɵɵsanitizeUrl);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1(" ", ctx_r9.literals.forgotPassword, " ");
} }
function PoPageChangePasswordComponent_div_14_a_3_Template(rf, ctx) { if (rf & 1) {
    const _r12 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "a", 37);
    i0.ɵɵlistener("click", function PoPageChangePasswordComponent_div_14_a_3_Template_a_click_0_listener() { i0.ɵɵrestoreView(_r12); const ctx_r11 = i0.ɵɵnextContext(2); return ctx_r11.onForgotPasswordClick(ctx_r11.recovery); });
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r10 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1(" ", ctx_r10.literals.forgotPassword, " ");
} }
function PoPageChangePasswordComponent_div_14_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 31);
    i0.ɵɵtemplate(1, PoPageChangePasswordComponent_div_14_a_1_Template, 2, 2, "a", 32);
    i0.ɵɵtemplate(2, PoPageChangePasswordComponent_div_14_a_2_Template, 2, 2, "a", 33);
    i0.ɵɵtemplate(3, PoPageChangePasswordComponent_div_14_a_3_Template, 2, 1, "a", 34);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r3.recoveryUrlType === "internalLink");
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r3.recoveryUrlType === "externalLink");
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", !ctx_r3.recoveryUrlType);
} }
function PoPageChangePasswordComponent_div_19_li_6_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "li", 40);
    i0.ɵɵelement(1, "span", 43);
    i0.ɵɵelementStart(2, "p", 44);
    i0.ɵɵtext(3);
    i0.ɵɵelementEnd()();
} if (rf & 2) {
    const requirement_r14 = ctx.$implicit;
    const ctx_r13 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngClass", ctx_r13.validateRequirement(requirement_r14) ? "po-icon-ok po-page-change-password-required-ok" : "po-icon-minus po-page-change-password-required-minus");
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1(" ", requirement_r14.requirement, " ");
} }
function PoPageChangePasswordComponent_div_19_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 38)(1, "po-container")(2, "ul", 39)(3, "li", 40)(4, "p", 41);
    i0.ɵɵtext(5);
    i0.ɵɵelementEnd()();
    i0.ɵɵtemplate(6, PoPageChangePasswordComponent_div_19_li_6_Template, 4, 2, "li", 42);
    i0.ɵɵelementEnd()()();
} if (rf & 2) {
    const ctx_r4 = i0.ɵɵnextContext();
    i0.ɵɵadvance(5);
    i0.ɵɵtextInterpolate1(" ", ctx_r4.literals == null ? null : ctx_r4.literals.requirements, " ");
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngForOf", ctx_r4.requirements);
} }
function PoPageChangePasswordComponent_po_button_38_Template(rf, ctx) { if (rf & 1) {
    const _r16 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "po-button", 45);
    i0.ɵɵlistener("p-click", function PoPageChangePasswordComponent_po_button_38_Template_po_button_p_click_0_listener() { i0.ɵɵrestoreView(_r16); const ctx_r15 = i0.ɵɵnextContext(); return ctx_r15.navigateTo(ctx_r15.urlBack); });
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = i0.ɵɵnextContext();
    i0.ɵɵproperty("p-label", ctx_r5.literals.backButton);
} }
const _c2 = function (a0) { return { "po-offset-md-3 po-offset-lg-3 po-offset-xl-3": a0 }; };
/**
 * @docsExtends PoPageChangePasswordBaseComponent
 *
 * @example
 *
 * <example name="po-page-change-password-basic" title="PO Page Change Password Basic">
 *  <file name="sample-po-page-change-password-basic/sample-po-page-change-password-basic.component.html"> </file>
 *  <file name="sample-po-page-change-password-basic/sample-po-page-change-password-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-page-change-password-labs" title="PO Page Change Password Labs">
 *  <file name="sample-po-page-change-password-labs/sample-po-page-change-password-labs.component.html"> </file>
 *  <file name="sample-po-page-change-password-labs/sample-po-page-change-password-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-page-change-password-modify" title="PO Page Change Password Modify">
 *  <file name="sample-po-page-change-password-modify/sample-po-page-change-password-modify.component.html"> </file>
 *  <file name="sample-po-page-change-password-modify/sample-po-page-change-password-modify.component.ts"> </file>
 * </example>
 *
 * <example name="po-page-change-password-create" title="PO Page Change Password Create">
 *  <file name="sample-po-page-change-password-create/sample-po-page-change-password-create.component.html"> </file>
 *  <file name="sample-po-page-change-password-create/sample-po-page-change-password-create.component.ts"> </file>
 * </example>
 *
 * <example name="po-page-change-password-request" title="PO Page Change Password Request">
 *  <file name="sample-po-page-change-password-request/sample-po-page-change-password-request.component.html"> </file>
 *  <file name="sample-po-page-change-password-request/sample-po-page-change-password-request.component.ts"> </file>
 * </example>
 */
export class PoPageChangePasswordComponent extends PoPageChangePasswordBaseComponent {
    constructor(activatedRoute, route, router, service, poComponentInjector, languageService, viewRef) {
        super();
        this.activatedRoute = activatedRoute;
        this.route = route;
        this.router = router;
        this.service = service;
        this.poComponentInjector = poComponentInjector;
        this.literals = poPageChangePasswordLiterals[poLocaleDefault];
        this.modalAction = {
            action: this.navigateTo.bind(this, this.urlHome),
            label: this.literals.enterSystemButton
        };
        this.componentRef = null;
        const language = languageService.getShortLanguage();
        this.literals = {
            ...poPageChangePasswordLiterals[poLocaleDefault],
            ...poPageChangePasswordLiterals[language]
        };
    }
    ngAfterViewInit() {
        if (this.urlNewPassword) {
            this.subscribeToTokenParameter();
        }
    }
    ngOnDestroy() {
        if (this.newPasswordSubscription) {
            this.newPasswordSubscription.unsubscribe();
        }
    }
    ngOnInit() {
        this.checkingForRouteMetadata(this.activatedRoute.snapshot.data);
    }
    navigateTo(url) {
        isExternalLink(url) ? window.open(url) : this.router.navigate([url || '/']);
    }
    onForgotPasswordClick(recovery) {
        if (isTypeof(recovery, 'function')) {
            recovery();
        }
        else {
            this.createModalPasswordRecoveryComponent(recovery);
        }
    }
    onLoginSubmit() {
        const form = this.getLoginForm();
        if (this.urlNewPassword) {
            this.postUrlNewPassword(form);
        }
        else if (this.submit && this.submit.observers.length) {
            this.emitSubmit(form);
        }
    }
    /**
     * Abre uma modal de confirmação com texto, imagem e botão que redireciona para o link definido na propriedade `p-url-home`
     */
    openConfirmation() {
        this.modal.open();
    }
    validatePassword() {
        const controls = this.passwordForm.form.controls;
        const controlConfirmPassword = controls['confirmPassword'];
        const controlNewPassword = controls['newPassword'];
        if (!this.newPassword) {
            this.setFormErrors({ 'required': true }, [controlNewPassword]);
        }
        else if (!this.confirmPassword) {
            this.setFormErrors({ 'required': true }, [controlConfirmPassword]);
        }
        else if (this.newPassword && this.confirmPassword && this.newPassword !== this.confirmPassword) {
            this.setFormErrors({ 'equalPassword': true }, [controlNewPassword, controlConfirmPassword]);
        }
        else {
            this.setFormErrors(null, [controlConfirmPassword, controlNewPassword]);
        }
        if (this.requirements.length &&
            this.requirements.find(requirement => this.validateRequirement(requirement) === false)) {
            this.setFormErrors({ 'requirement': true }, [controlNewPassword]);
        }
    }
    validateRequirement(requirement) {
        return typeof requirement.status === 'function' ? requirement.status(this.newPassword) : requirement.status;
    }
    checkingForMetadataProperty(object, property) {
        if (Object.prototype.hasOwnProperty.call(object, property)) {
            return object[property];
        }
    }
    checkingForRouteMetadata(data) {
        if (Object.keys(data).length !== 0) {
            this.urlNewPassword = this.checkingForMetadataProperty(data, 'serviceApi') || this.urlNewPassword;
            this.recovery = this.checkingForMetadataProperty(data, 'recovery') || this.recovery;
            this.hideCurrentPassword =
                this.checkingForMetadataProperty(data, 'hideCurrentPassword') || this.hideCurrentPassword;
        }
    }
    createModalPasswordRecoveryComponent(recovery) {
        if (this.componentRef) {
            this.poComponentInjector.destroyComponentInApplication(this.componentRef);
        }
        this.componentRef = this.poComponentInjector.createComponentInApplication(PoModalPasswordRecoveryComponent);
        this.componentRef.instance.recovery = recovery.url;
        this.componentRef.instance.contactEmail = recovery.contactMail;
        this.componentRef.instance.phoneMask = recovery.phoneMask;
        this.componentRef.instance.type = recovery.type || PoModalPasswordRecoveryType.Email;
        this.componentRef.changeDetectorRef.detectChanges();
        setTimeout(() => {
            this.componentRef.instance.open();
        });
    }
    emitSubmit(form) {
        this.submit.emit(form);
    }
    getLoginForm() {
        return {
            currentPassword: this.currentPassword,
            newPassword: this.newPassword
        };
    }
    postUrlNewPassword(form) {
        form['token'] = this.token;
        this.service.post(this.urlNewPassword, form).subscribe(response => {
            if (response.status === 204) {
                this.openConfirmation();
            }
        });
    }
    setFormErrors(error, controls) {
        controls.forEach(control => {
            control.setErrors(error);
        });
    }
    subscribeToTokenParameter() {
        this.route.queryParams.subscribe(params => {
            const token = params['token'];
            if (token) {
                this.token = token;
            }
        });
    }
}
PoPageChangePasswordComponent.ɵfac = function PoPageChangePasswordComponent_Factory(t) { return new (t || PoPageChangePasswordComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.PoPageChangePasswordService), i0.ɵɵdirectiveInject(i3.PoComponentInjectorService), i0.ɵɵdirectiveInject(i3.PoLanguageService), i0.ɵɵdirectiveInject(i0.ViewContainerRef)); };
PoPageChangePasswordComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoPageChangePasswordComponent, selectors: [["po-page-change-password"]], viewQuery: function PoPageChangePasswordComponent_Query(rf, ctx) { if (rf & 1) {
        i0.ɵɵviewQuery(PoModalComponent, 7);
        i0.ɵɵviewQuery(_c0, 7, ViewContainerRef);
        i0.ɵɵviewQuery(_c1, 7, NgForm);
    } if (rf & 2) {
        let _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.modal = _t.first);
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.pageChangePassword = _t.first);
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.passwordForm = _t.first);
    } }, features: [i0.ɵɵInheritDefinitionFeature], decls: 43, vars: 25, consts: [[1, "po-page-change-password-wrapper"], ["pageChangePassword", ""], [1, "po-page-change-password-container"], [1, "po-page-change-password", 3, "p-logo", "p-secondary-logo"], [1, "po-page-blocked-user-header", "po-row"], [1, "po-md-12"], [1, "po-md-12", "po-text-center", "po-font-text"], ["passwordForm", "ngForm"], [1, "po-row", "po-mt-3", "po-mt-sm-1"], [1, "po-md-6", 3, "ngClass"], [4, "ngIf"], ["class", "po-text-center po-mb-sm-1 po-mb-2", 4, "ngIf"], ["name", "newPassword", "p-required", "", 3, "ngModel", "p-label", "ngModelChange", "p-change-model"], ["name", "confirmPassword", "p-required", "", 3, "ngModel", "p-label", "ngModelChange", "p-change-model"], ["class", "po-md-6 po-page-change-password-required-container", 4, "ngIf"], [1, "po-sm-12"], [1, "po-page-change-password-tips", "po-row"], [1, "po-md-2", "po-mr-3"], ["alt", "Blocked user image", "src", "./assets/images/big-lock.svg", 1, "po-page-change-password-lock-image", "po-mb-3"], [1, "po-md-9", "po-page-change-password-tips-text"], [1, "po-font-text-bold", "po-pb-1"], [1, "po-font-text-small"], [1, "po-row", "po-pb-1"], [1, "po-page-change-password-buttons", "po-row"], [1, "po-sm-12", "po-mobile-only"], ["class", "po-sm-6 po-mb-sm-1", 3, "p-label", "p-click", 4, "ngIf"], ["p-type", "primary", 3, "ngClass", "p-disabled", "p-label", "p-click"], ["p-hide-close", "", "p-size", "auto", 3, "p-primary-action", "p-title"], [1, "po-text-center"], ["alt", "Blocked user image", "src", "./assets/images/success.svg", 1, "po-page-change-password-lock-image", "po-mb-3"], ["name", "currentPassword", "p-required", "", 3, "ngModel", "p-label", "ngModelChange"], [1, "po-text-center", "po-mb-sm-1", "po-mb-2"], ["class", "po-font-text-bold po-page-change-password-forgot-password", 3, "routerLink", 4, "ngIf"], ["class", "po-font-text-bold po-page-change-password-forgot-password", 3, "href", 4, "ngIf"], ["class", "po-font-text-bold po-page-change-password-forgot-password po-clickable", 3, "click", 4, "ngIf"], [1, "po-font-text-bold", "po-page-change-password-forgot-password", 3, "routerLink"], [1, "po-font-text-bold", "po-page-change-password-forgot-password", 3, "href"], [1, "po-font-text-bold", "po-page-change-password-forgot-password", "po-clickable", 3, "click"], [1, "po-md-6", "po-page-change-password-required-container"], [1, "po-page-change-password-required-list"], [1, "po-page-change-password-required-item"], [1, "po-mb-1", "po-font-text-bold", "po-page-change-password-required-title"], ["class", "po-page-change-password-required-item", 4, "ngFor", "ngForOf"], [1, "po-icon", "po-page-change-password-required-icon", 3, "ngClass"], [1, "po-page-change-password-required-text", "po-font-text"], [1, "po-sm-6", "po-mb-sm-1", 3, "p-label", "p-click"]], template: function PoPageChangePasswordComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 0, 1)(2, "div", 2)(3, "po-page-background", 3)(4, "div", 4)(5, "div", 5);
        i0.ɵɵtext(6);
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(7, "div", 6);
        i0.ɵɵtext(8);
        i0.ɵɵelementEnd()();
        i0.ɵɵelementStart(9, "form", null, 7)(11, "div", 8)(12, "div", 9);
        i0.ɵɵtemplate(13, PoPageChangePasswordComponent_div_13_Template, 2, 2, "div", 10);
        i0.ɵɵtemplate(14, PoPageChangePasswordComponent_div_14_Template, 4, 3, "div", 11);
        i0.ɵɵelementStart(15, "div")(16, "po-password", 12);
        i0.ɵɵlistener("ngModelChange", function PoPageChangePasswordComponent_Template_po_password_ngModelChange_16_listener($event) { return ctx.newPassword = $event; })("p-change-model", function PoPageChangePasswordComponent_Template_po_password_p_change_model_16_listener() { return ctx.validatePassword(); });
        i0.ɵɵelementEnd()();
        i0.ɵɵelementStart(17, "div")(18, "po-password", 13);
        i0.ɵɵlistener("ngModelChange", function PoPageChangePasswordComponent_Template_po_password_ngModelChange_18_listener($event) { return ctx.confirmPassword = $event; })("p-change-model", function PoPageChangePasswordComponent_Template_po_password_p_change_model_18_listener() { return ctx.validatePassword(); });
        i0.ɵɵelementEnd()()();
        i0.ɵɵtemplate(19, PoPageChangePasswordComponent_div_19_Template, 7, 2, "div", 14);
        i0.ɵɵelementEnd()();
        i0.ɵɵelement(20, "po-divider", 15);
        i0.ɵɵelementStart(21, "div", 16)(22, "div", 17);
        i0.ɵɵelement(23, "img", 18);
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(24, "div", 19)(25, "div", 20);
        i0.ɵɵtext(26);
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(27, "div", 21)(28, "div", 22);
        i0.ɵɵtext(29);
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(30, "div", 22);
        i0.ɵɵtext(31);
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(32, "div", 22);
        i0.ɵɵtext(33);
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(34, "div", 22);
        i0.ɵɵtext(35);
        i0.ɵɵelementEnd()()()();
        i0.ɵɵelementStart(36, "div", 23);
        i0.ɵɵelement(37, "po-divider", 24);
        i0.ɵɵtemplate(38, PoPageChangePasswordComponent_po_button_38_Template, 1, 1, "po-button", 25);
        i0.ɵɵelementStart(39, "po-button", 26);
        i0.ɵɵlistener("p-click", function PoPageChangePasswordComponent_Template_po_button_p_click_39_listener() { return ctx.onLoginSubmit(); });
        i0.ɵɵelementEnd()()()()();
        i0.ɵɵelementStart(40, "po-modal", 27)(41, "div", 28);
        i0.ɵɵelement(42, "img", 29);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const _r1 = i0.ɵɵreference(10);
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("p-logo", ctx.logo)("p-secondary-logo", ctx.secondaryLogo);
        i0.ɵɵadvance(3);
        i0.ɵɵtextInterpolate(ctx.literals.createNewPassword);
        i0.ɵɵadvance(2);
        i0.ɵɵtextInterpolate1(" ", ctx.literals.createNewPasswordPhrase, " ");
        i0.ɵɵadvance(4);
        i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(23, _c2, !ctx.showRequirements));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !ctx.hideCurrentPassword);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !ctx.hideCurrentPassword && ctx.recovery);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngModel", ctx.newPassword)("p-label", ctx.literals.newPassword);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngModel", ctx.confirmPassword)("p-label", ctx.literals.confirmPassword);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx.showRequirements);
        i0.ɵɵadvance(7);
        i0.ɵɵtextInterpolate(ctx.literals.safetyTips);
        i0.ɵɵadvance(3);
        i0.ɵɵtextInterpolate(ctx.literals.safetyTipsPhrase);
        i0.ɵɵadvance(2);
        i0.ɵɵtextInterpolate1("\u2022 ", ctx.literals.safetyTipsFirst, "");
        i0.ɵɵadvance(2);
        i0.ɵɵtextInterpolate1("\u2022 ", ctx.literals.safetyTipsSecond, "");
        i0.ɵɵadvance(2);
        i0.ɵɵtextInterpolate1("\u2022 ", ctx.literals.safetyTipsThird, "");
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngIf", !ctx.hideCurrentPassword);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngClass", ctx.hideCurrentPassword ? "po-md-12" : "po-sm-6")("p-disabled", _r1.invalid)("p-label", ctx.literals.saveButton);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("p-primary-action", ctx.modalAction)("p-title", ctx.hideCurrentPassword ? ctx.literals.passwordSuccessfullyCreated : ctx.literals.passwordSuccessfullyUpdated);
    } }, directives: [i4.PoPageBackgroundComponent, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.NgForm, i6.NgClass, i6.NgIf, i3.PoPasswordComponent, i5.NgControlStatus, i5.NgModel, i1.RouterLinkWithHref, i3.PoContainerComponent, i6.NgForOf, i3.PoDividerComponent, i3.PoButtonComponent, i3.PoModalComponent], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoPageChangePasswordComponent, [{
        type: Component,
        args: [{ selector: 'po-page-change-password', template: "<div class=\"po-page-change-password-wrapper\" #pageChangePassword>\n  <div class=\"po-page-change-password-container\">\n    <po-page-background class=\"po-page-change-password\" [p-logo]=\"logo\" [p-secondary-logo]=\"secondaryLogo\">\n      <div class=\"po-page-blocked-user-header po-row\">\n        <div class=\"po-md-12\">{{ literals.createNewPassword }}</div>\n        <div class=\"po-md-12 po-text-center po-font-text\">\n          {{ literals.createNewPasswordPhrase }}\n        </div>\n      </div>\n\n      <form #passwordForm=\"ngForm\">\n        <div class=\"po-row po-mt-3 po-mt-sm-1\">\n          <div class=\"po-md-6\" [ngClass]=\"{ 'po-offset-md-3 po-offset-lg-3 po-offset-xl-3': !showRequirements }\">\n            <div *ngIf=\"!hideCurrentPassword\">\n              <po-password\n                name=\"currentPassword\"\n                [(ngModel)]=\"currentPassword\"\n                p-required\n                [p-label]=\"literals.currentPassword\"\n              >\n              </po-password>\n            </div>\n            <div *ngIf=\"!hideCurrentPassword && recovery\" class=\"po-text-center po-mb-sm-1 po-mb-2\">\n              <a\n                *ngIf=\"recoveryUrlType === 'internalLink'\"\n                class=\"po-font-text-bold po-page-change-password-forgot-password\"\n                [routerLink]=\"recovery\"\n              >\n                {{ literals.forgotPassword }}\n              </a>\n              <a\n                *ngIf=\"recoveryUrlType === 'externalLink'\"\n                class=\"po-font-text-bold po-page-change-password-forgot-password\"\n                [href]=\"recovery\"\n              >\n                {{ literals.forgotPassword }}\n              </a>\n              <a\n                *ngIf=\"!recoveryUrlType\"\n                class=\"po-font-text-bold po-page-change-password-forgot-password po-clickable\"\n                (click)=\"onForgotPasswordClick(recovery)\"\n              >\n                {{ literals.forgotPassword }}\n              </a>\n            </div>\n            <div>\n              <po-password\n                name=\"newPassword\"\n                [(ngModel)]=\"newPassword\"\n                p-required\n                [p-label]=\"literals.newPassword\"\n                (p-change-model)=\"validatePassword()\"\n              >\n              </po-password>\n            </div>\n            <div>\n              <po-password\n                name=\"confirmPassword\"\n                [(ngModel)]=\"confirmPassword\"\n                p-required\n                [p-label]=\"literals.confirmPassword\"\n                (p-change-model)=\"validatePassword()\"\n              >\n              </po-password>\n            </div>\n          </div>\n          <div *ngIf=\"showRequirements\" class=\"po-md-6 po-page-change-password-required-container\">\n            <po-container>\n              <ul class=\"po-page-change-password-required-list\">\n                <li class=\"po-page-change-password-required-item\">\n                  <p class=\"po-mb-1 po-font-text-bold po-page-change-password-required-title\">\n                    {{ literals?.requirements }}\n                  </p>\n                </li>\n                <li *ngFor=\"let requirement of requirements\" class=\"po-page-change-password-required-item\">\n                  <span\n                    class=\"po-icon po-page-change-password-required-icon\"\n                    [ngClass]=\"\n                      validateRequirement(requirement)\n                        ? 'po-icon-ok po-page-change-password-required-ok'\n                        : 'po-icon-minus po-page-change-password-required-minus'\n                    \"\n                  >\n                  </span>\n                  <p class=\"po-page-change-password-required-text po-font-text\">\n                    {{ requirement.requirement }}\n                  </p>\n                </li>\n              </ul>\n            </po-container>\n          </div>\n        </div>\n      </form>\n\n      <po-divider class=\"po-sm-12\"></po-divider>\n\n      <div class=\"po-page-change-password-tips po-row\">\n        <div class=\"po-md-2 po-mr-3\">\n          <img\n            class=\"po-page-change-password-lock-image po-mb-3\"\n            alt=\"Blocked user image\"\n            src=\"./assets/images/big-lock.svg\"\n          />\n        </div>\n        <div class=\"po-md-9 po-page-change-password-tips-text\">\n          <div class=\"po-font-text-bold po-pb-1\">{{ literals.safetyTips }}</div>\n          <div class=\"po-font-text-small\">\n            <div class=\"po-row po-pb-1\">{{ literals.safetyTipsPhrase }}</div>\n            <div class=\"po-row po-pb-1\">\u2022 {{ literals.safetyTipsFirst }}</div>\n            <div class=\"po-row po-pb-1\">\u2022 {{ literals.safetyTipsSecond }}</div>\n            <div class=\"po-row po-pb-1\">\u2022 {{ literals.safetyTipsThird }}</div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"po-page-change-password-buttons po-row\">\n        <po-divider class=\"po-sm-12 po-mobile-only\"></po-divider>\n\n        <po-button\n          *ngIf=\"!hideCurrentPassword\"\n          class=\"po-sm-6 po-mb-sm-1\"\n          [p-label]=\"literals.backButton\"\n          (p-click)=\"navigateTo(urlBack)\"\n        >\n        </po-button>\n\n        <po-button\n          [ngClass]=\"hideCurrentPassword ? 'po-md-12' : 'po-sm-6'\"\n          p-type=\"primary\"\n          [p-disabled]=\"passwordForm.invalid\"\n          [p-label]=\"literals.saveButton\"\n          (p-click)=\"onLoginSubmit()\"\n        >\n        </po-button>\n      </div>\n    </po-page-background>\n  </div>\n</div>\n\n<po-modal\n  [p-primary-action]=\"modalAction\"\n  p-hide-close\n  p-size=\"auto\"\n  [p-title]=\"hideCurrentPassword ? literals.passwordSuccessfullyCreated : literals.passwordSuccessfullyUpdated\"\n>\n  <div class=\"po-text-center\">\n    <img\n      alt=\"Blocked user image\"\n      class=\"po-page-change-password-lock-image po-mb-3\"\n      src=\"./assets/images/success.svg\"\n    />\n  </div>\n</po-modal>\n" }]
    }], function () { return [{ type: i1.ActivatedRoute }, { type: i1.ActivatedRoute }, { type: i1.Router }, { type: i2.PoPageChangePasswordService }, { type: i3.PoComponentInjectorService }, { type: i3.PoLanguageService }, { type: i0.ViewContainerRef }]; }, { modal: [{
            type: ViewChild,
            args: [PoModalComponent, { static: true }]
        }], pageChangePassword: [{
            type: ViewChild,
            args: ['pageChangePassword', { read: ViewContainerRef, static: true }]
        }], passwordForm: [{
            type: ViewChild,
            args: ['passwordForm', { read: NgForm, static: true }]
        }] }); })();
//# sourceMappingURL=data:application/json;base64,